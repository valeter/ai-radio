# Default values for caster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace: ai-radio

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: cr.yandex/crpql2lunj3qmje5rnos/ai-radio-caster
  pullPolicy: Always
  tag: "latest"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true

podAnnotations:
  rollme: {{ randAlphaNum 5 | quote }} # restart after each helm upgrade

podLabels: {}

podSecurityContext: {}

securityContext:
  privileged: true # for s3fs

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  type: NodePort
  targetPort: 32745 # nginx port from caster container
  externalPort: 443 # for documentation only

# https://yandex.cloud/ru/docs/managed-kubernetes/tutorials/new-kubernetes-project#create-ingress
# https://yandex.cloud/en/docs/application-load-balancer/k8s-ref/ingress
ingress:
  logGroupId: e239var1beii4fu9ecpa # k8s alb logging group
  enabled: true
  className: ""
  annotations:
    ingress.alb.yc.io/subnets: fl8d2jr8im4t5coavo64 # rucentral1-d
    ingress.alb.yc.io/security-groups: enpfr1ed7imm6nej45ht # k8s sg
    ingress.alb.yc.io/external-ipv4-address: 51.250.115.74 # stream.ai-radio.ru
    ingress.alb.yc.io/group-name: ai-radio
    ingress.alb.yc.io/group-settings-name: base-settings
    rollme: {{ randAlphaNum 5 | quote }}  # restart after each helm upgrade

  tls:
    - secretName: yc-certmgr-cert-id-fpqlooi4u8gmukddm0pm # stream.ai-radio.ru cert
      hosts:
        - stream.ai-radio.ru

  hosts:
    - host: stream.ai-radio.ru
      paths:
        - path: /
          pathType: Exact
          backend: ai-radio-caster-backend

  defaultBackend:

container:
  resources: 
    requests:
      memory: "128M"
      cpu: "100m"

# nginx port and endpoint from caster container
livenessProbe:
  httpGet:
    path: /ping
    port: 32745
readinessProbe:
  httpGet:
    path: /ping
    port: 32745

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}
